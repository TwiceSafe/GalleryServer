openapi: "3.0.0"
info:
  title: My API
  version: 1.0.0
  description: This is a sample API.
paths:
  /{version}/hello:
    get:
      summary: Ping server and get information about it.
      parameters:
        - name: error
          description: Error should be emitted. 0 for not raising, 1 for raising
          in: query
          required: False
          schema:
            type: integer
        - name: version
          description: Version of API
          in: path
          required: True
          schema:
            type: string
      responses:
        200:
          description: Server sent a response containing info about it.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: Response status 200
                  response:
                    type: object
                    description: Response data
                    properties:
                      hello:
                        type: string
                        description: Some string signaling that the server is working
                      api_version:
                        type: integer
                        description: Actual API version that server can handle
        400:
          description: Server sent a response with error. Nothing affected because of this
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: Response status 400
                  error:
                    type: object
                    description: Response error data
                    properties:
                      name:
                        type: string
                        description: Error name
                      description:
                        type: string
                        description: Error description
  /hello:
    get:
      summary: Ping server and get information about it.
      parameters:
        - name: error
          description: Error should be emitted. 0 for not raising, 1 for raising
          in: query
          required: False
          schema:
            type: integer
      responses:
        200:
          description: Server sent a response containing info about it.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: Response status 200
                  response:
                    type: object
                    description: Response data
                    properties:
                      hello:
                        type: string
                        description: Some string signaling that the server is working
                      api_version:
                        type: integer
                        description: Actual API version that server can handle
        400:
          description: Server sent a response with error. Nothing affected because of this
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: Response status 400
                  error:
                    type: object
                    description: Response error data
                    properties:
                      name:
                        type: string
                        description: Error name
                      description:
                        type: string
                        description: Error description
  /{version}/upload:
    post:
      summary: Uploads an image file
      parameters:
        - name: version
          description: Version of API
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: "Uploading success"
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
      security:
        - jwt: [ 'secret' ]
  /{version}/auth/register:
    post:
      summary: Register user and return JWT token
      parameters:
        - name: username
          description: Username
          in: query
          required: true
          schema:
            type: string
        - name: password
          description: User password
          in: query
          required: true
          schema:
            type: string
        - name: version
          description: Version of API
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: JWT token
          content:
            application/json:
              schema:
                type: object
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
  /{version}/auth/login:
    get:
      summary: Return JWT token
      parameters:
        - name: username
          description: Username
          in: query
          required: true
          schema:
            type: string
        - name: password
          description: User password
          in: query
          required: true
          schema:
            type: string
        - name: version
          description: Version of API
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: JWT token
          content:
            application/json:
              schema:
                type: object
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
  /{version}/auth/refreshToken:
    get:
      summary: Get new JWT token for this device
      parameters:
        - name: version
          description: Version of API
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Refreshing token success"
          content:
            application/json:
              schema:
                type: object
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
      security:
        - jwt: [ 'secret' ]
  /{version}/repository/{repository_name}/head:
    get:
      parameters:
        - name: repository_name
          description: Repository name
          in: path
          required: true
          schema:
            type: string
        - name: version
          description: Version of API
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Getting head success"
          content:
            application/json:
              schema:
                type: object
      security:
        - jwt: [ 'secret' ]
  /{version}/repository/{repository_name}/commit:
    post:
      parameters:
        - name: repository_name
          description: Repository name
          in: path
          required: true
          schema:
            type: string
        - name: version
          description: Version of API
          in: path
          required: true
          schema:
            type: string
      requestBody:
        x-body-name: commit
        description: Commit data
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: "Add new commit"
          content:
            application/json:
              schema:
                type: string
      security:
        - jwt: [ 'secret' ]
  /{version}/repository/{repository_name}/commit/{commit_id}:
    get:
      parameters:
        - name: repository_name
          description: Repository name
          in: path
          required: true
          schema:
            type: string
        - name: commit_id
          description: Commit ID
          in: path
          required: true
          schema:
            type: string
        - name: version
          description: Version of API
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Commit info
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
      security:
        - jwt: [ 'secret' ]
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: classes.user.decode_token